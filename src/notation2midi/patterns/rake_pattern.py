from typing import override

from src.common.constants import PatternType, Stroke
from src.common.notes import Note, NoteFactory, Pattern
from src.notation2midi.patterns.pattern import PatternGenerator


class RakePatternGenerator(PatternGenerator):
    """Generates note sequences to implement Patterns such as tremolo.
    Adds the sequence to the `pattern` attribute of the Pattern."""

    NAME = "Rake left and right (gangsa only)"

    @override
    def create_pattern(self, notes: list[Note]) -> None:
        """Generates the rake left and rake right patterns.
        NOT IMPLEMENTED YET: currently just creates a single note from pattern's attributes"""
        for note in notes:
            if isinstance(note, Pattern) and note.effect in (PatternType.RAKE_LEFT, PatternType.RAKE_RIGHT):
                attributes = note.model_dump()
                attributes |= {
                    Note.Fields.EFFECT: Stroke.OPEN,
                    Note.Fields.AUTOGENERATED: True,
                }
                note.pattern.append(NoteFactory.create_note(**attributes))
